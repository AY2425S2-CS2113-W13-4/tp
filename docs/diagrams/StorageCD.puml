@startuml
skinparam classAttributeIconSize 0
hide circle

class Storage {
    +DATA_DIRECTORY : String
    +DATA_FILE : String
    +DATA_PATH : Path
    +loadLogs(mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList, goalLogs: LogList) : void
    +parseStringToLog(line: String) : Log
    +appendLogToFile(log: Log) : void
    +rewriteLogsToFile(logs: LogList) : void
    +parseLogToString(log: Log) : String
    +parseStringToMealLog(line: String) : Log
    +parseStringToWorkoutLog(line: String) : Log
    +parseStringToCardioLog(line: String) : Log
    +parseStringToWaterLog(line: String) : Log
    +parseStringToPersonalBestLog(line: String) : Log
}

class LogList {
    +getLog(index: int) : Log
    +getSize() : int
    +isEmpty() : boolean
    +loadLog(log: Log) : void
    +addLog(log: Log) : void
    +deleteLog(index: int) : void
}

abstract class Log {
    +getDate() : String
    +getLogType() : String
    +toString() : String
}

class Meal
class Workout
class Water
class PersonalBest
class Cardio
class Goals {
  - dailyWaterGoal: String
  - dailyCalorieGoal: String
  - weightGoal: String
  - weeklyWeightProgress: String
  + getInstance(): Goals
  + updateGoals(water: String, calorie: String, weight: String): void
  + toString(): String
}

class DateParser {
    +isValidFormattedDate(date: String) : boolean
}

Storage ..> LogList : uses
Storage ..> Log : creates/uses
Storage ..> Meal
Storage ..> Workout
Storage ..> Water
Storage ..> PersonalBest
Storage ..> Cardio
Storage ..> Goals
Storage ..> DateParser

@enduml
