@startuml

actor User
participant ":RecommendParser"
participant ":RecommendCommand"
participant ":Ui"
participant ":ExceptionHandler"

User -> ":RecommendParser": parse("recommend <muscle_group>")
activate ":RecommendParser"

alt valid input
    create ":RecommendCommand"
    ":RecommendParser" -> ":RecommendCommand": new RecommendCommand(list)
    activate ":RecommendCommand"

    ":RecommendCommand" -> ":RecommendCommand": execute()
    activate ":RecommendCommand"
    ":RecommendCommand" --> ":RecommendCommand" : return
    deactivate ":RecommendCommand"

    ":RecommendCommand" -> ":Ui": printMessage(list)
    activate ":Ui"
    ":Ui" --> ":RecommendCommand": display message
    deactivate ":Ui"

    ":RecommendCommand" --> ":RecommendParser": success message
    deactivate ":RecommendCommand"

    ":RecommendParser" --> User: success message

else invalid input
    ":RecommendParser" -> ":ExceptionHandler": throw exception
    activate ":ExceptionHandler"
    ":ExceptionHandler" --> ":RecommendParser": error message
    deactivate ":ExceptionHandler"

    ":RecommendParser" --> User: error message
    deactivate ":RecommendParser"
end

@enduml
