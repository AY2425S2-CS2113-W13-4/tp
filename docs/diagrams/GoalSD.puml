@startuml
actor User
participant ":HealthBud" as HealthBud
participant ":GeneralParser" as GeneralParser
participant ":AddParser" as AddParser
participant ":AddGoalParser" as AddGoalParser
participant ":ParserParameters" as ParserParameters
participant ":AddGoalCommand" as AddGoalCommand
participant ":Goals" as Goals
participant "goalLogs:LogList" as LogList

User -> HealthBud : "add goal /w 2000 /cal 1800 /kg 65"
activate HealthBud

HealthBud -> GeneralParser : handleInput("add goal ...")
activate GeneralParser

GeneralParser -> AddParser : parse("goal", goalLogs, ...)
activate AddParser

AddParser -> AddGoalParser : parse(goalLogs, input)
activate AddGoalParser

AddGoalParser -> ParserParameters : parseParameters("/w 2000 /cal 1800 /kg 65")
activate ParserParameters
ParserParameters --> AddGoalParser : params {w: "2000", cal: "1800", kg: "65"}
deactivate ParserParameters

AddGoalParser -> Goals : getInstance()
activate Goals
Goals --> AddGoalParser : singleton instance
deactivate Goals

create AddGoalCommand
AddGoalParser -> AddGoalCommand : new AddGoalCommand(params)
activate AddGoalCommand
AddGoalParser --> AddParser : AddGoalCommand
deactivate AddGoalParser

AddParser --> GeneralParser : AddGoalCommand
deactivate AddParser

GeneralParser -> AddGoalCommand : execute()
activate AddGoalCommand

AddGoalCommand -> Goals : getInstance()
activate Goals
Goals --> AddGoalCommand : singleton instance
deactivate Goals

AddGoalCommand -> Goals : updateGoals("2000", "1800", "65")
activate Goals
Goals --> AddGoalCommand
deactivate Goals

AddGoalCommand -> LogList : addLog(Goals)
activate LogList
LogList --> AddGoalCommand
deactivate LogList

AddGoalCommand --> GeneralParser
deactivate AddGoalCommand

GeneralParser --> HealthBud
deactivate GeneralParser

HealthBud --> User
deactivate HealthBud
@enduml
